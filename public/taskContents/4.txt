return new Promise(resolve=>{
    let result={};
    let complex_value=String(data['value']);
    let values=complex_value.split('|');
    let complex_key=data['key'];
    let keys=complex_key.split('|');

    result[complex_key]=[];

    for(let i=0;i<keys.length;i++){
        key=keys[i];
        value=values[i];
        let array_values=value.split(',');

        let temp={};
        array_values.forEach((element)=>{
            let [tempKey,value] = element.split(':');
            if(temp[tempKey] === undefined){
                temp[tempKey]=[];
            }
            temp[tempKey].push(value);
    })

    let resultValue = 0;
    Object.keys(temp).forEach((key)=>{
        resultValue += +temp[key].reduce((a,b)=> {
            //console.log(a,b,a*b,key);
            return a*b;
        });

     })
     result[complex_key].push(resultValue) ;
}
    result[complex_key]=result[complex_key].join('|')
    resolve(result);
})

                